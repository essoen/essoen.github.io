<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Organizational Design on Stein-Otto Svorstøl</title><link>https://www.svorstol.com/tags/organizational-design/</link><description>Recent content in Organizational Design on Stein-Otto Svorstøl</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><lastBuildDate>Mon, 03 Feb 2025 11:41:31 +0000</lastBuildDate><atom:link href="https://www.svorstol.com/tags/organizational-design/index.xml" rel="self" type="application/rss+xml"/><item><title>Leadership as a platform (team)</title><link>https://www.svorstol.com/blog/2025/02-03-leadership-as-a-platform/</link><pubDate>Mon, 03 Feb 2025 11:41:31 +0000</pubDate><guid>https://www.svorstol.com/blog/2025/02-03-leadership-as-a-platform/</guid><description>&lt;p>A couple of years ago I was involved in utilized the ideas from &lt;a href="https://www.svorstol.com/blog/2021/02-14-team-top-at-capra/">Team Topologies in reorganizing the consultancy where I work&lt;/a>. Recently, Manuel Pais, co-author of &lt;em>Team Topologies&lt;/em>, used my company as an example of something we’ve both called &lt;strong>Leadership as a Platform&lt;/strong>. You can see us mentioned &lt;a href="https://www.youtube.com/watch?v=k5SUWdrlTfs&amp;amp;list=PLLwpyIL5FI9wahgmw324EAllojHvOqtb2&amp;amp;t=1376s">here&lt;/a>.&lt;/p>
&lt;p>I&amp;rsquo;ve been deeply involved in shifting how we see ourselves—as a &lt;strong>platform&lt;/strong>—and ensuring we maintain that perspective. Instead of treating leadership as a position or a set of management tasks, we emphasize that &lt;strong>anyone&lt;/strong> can take leadership. It’s about stepping up, driving alignment, and enabling others to succeed.&lt;/p></description><content:encoded><![CDATA[<p>A couple of years ago I was involved in utilized the ideas from <a href="https://www.svorstol.com/blog/2021/02-14-team-top-at-capra/">Team Topologies in reorganizing the consultancy where I work</a>. Recently, Manuel Pais, co-author of <em>Team Topologies</em>, used my company as an example of something we’ve both called <strong>Leadership as a Platform</strong>. You can see us mentioned <a href="https://www.youtube.com/watch?v=k5SUWdrlTfs&amp;list=PLLwpyIL5FI9wahgmw324EAllojHvOqtb2&amp;t=1376s">here</a>.</p>
<p>I&rsquo;ve been deeply involved in shifting how we see ourselves—as a <strong>platform</strong>—and ensuring we maintain that perspective. Instead of treating leadership as a position or a set of management tasks, we emphasize that <strong>anyone</strong> can take leadership. It’s about stepping up, driving alignment, and enabling others to succeed.</p>
<p>To make this work, we’ve built a dedicated team focused on <strong>alignment and leadership as a platform</strong>—which we call <strong>Team Alignment</strong>. Their mission is to provide services that empower our teams and individuals to take the lead while keeping the organization aligned. They cover many of the tasks of a traditional top management group.</p>
<h2 id="our-approach">Our approach</h2>
<ul>
<li><strong>Service-Oriented Leadership:</strong> We view leadership activities as <strong>services</strong>, not just tasks. This ensures that all necessary information is accessible and that teams are effectively onboarded into our strategic direction.</li>
<li><strong>Team Responsibility:</strong> Leadership and alignment are collective responsibilities rather than being solely on the shoulders of managers. This fosters a more collaborative and engaged environment.</li>
</ul>
<p>This approach helps us maintain cohesive strategy, ensuring that everyone at Capra remains aligned and informed.</p>
<h3 id="the-services-we-offer">The Services We Offer</h3>
<h4 id="1-company-strategy">1. <strong>Company Strategy</strong></h4>
<p>A living <strong>Notion page</strong> and <strong>slide deck</strong> accessible to everyone. It covers:</p>
<ul>
<li>Who we are: vision, values, and what we do.</li>
<li>Our product and what we sell.</li>
<li>Current market understanding.</li>
<li>Key challenges we foresee.</li>
<li>Guiding policies and priorities for success.</li>
<li>Principles of our organizational model.</li>
<li>This document is continuously updated—always in production, i.e. we just update the documents when we need to.</li>
</ul>
<h4 id="2-metrics-board">2. <strong>Metrics Board</strong></h4>
<p>A <strong>Looker Studio dashboard</strong> offering insights into our goals, performance, and progress.</p>
<h4 id="3-monthly-status--qa-sessions">3. <strong>Monthly Status &amp; Q&amp;A Sessions</strong></h4>
<p>We run monthly status sessions covering company economics, key metrics, and priorities. They are similar to a &ldquo;all hands meeting&rdquo;, with the key difference in how we view them. It&rsquo;s informational, and conversational. It&rsquo;s a service, and we can measure how well it works for our end users.</p>
<h4 id="4-organizational-map">4. <strong>Organizational Map</strong></h4>
<ul>
<li>Principles and a dynamic perspective of our <strong>team-first organizational model</strong>.</li>
<li>A <strong>Miro board</strong> visualizing our structure and how we operate.</li>
<li>Support in navigating the organization effectively.</li>
</ul>
<h4 id="5-onboarding-for-new-employees">5. <strong>Onboarding for New Employees</strong></h4>
<ul>
<li>Dedicated onboarding sessions covering all these elements.</li>
<li>Ensures new employees quickly understand our strategy and direction.</li>
</ul>
<h3 id="continuous-learning--iteration">Continuous Learning &amp; Iteration</h3>
<p>Through these services, we constantly learn and iterate, improving both our leadership platform and our overall operations.</p>
<p>If this approach resonates with you, or if you’re curious to learn more, feel free to reach out!</p>
]]></content:encoded></item><item><title>Enabling teams vs. platform teams</title><link>https://www.svorstol.com/blog/2023/enabling-teams-vs/</link><pubDate>Wed, 08 Mar 2023 10:13:16 +0000</pubDate><guid>https://www.svorstol.com/blog/2023/enabling-teams-vs/</guid><description>&lt;p>&lt;em>Updated introduction March 13.&lt;/em>&lt;/p>
&lt;p>Building a platform is &lt;em>the&lt;/em> way to reduce cognitive load, in various areas. I follow &lt;a href="https://www.thoughtworks.com/what-we-do/enterprise-modernization-platforms-cloud/digital-platform-strategy">the model of ThoughtWorks&lt;/a>, where there are 5 types of platforms. In each, the ideal would be an easy-to-use platform that covers many use cases. That&amp;rsquo;s difficult to do. As with any product (&amp;lsquo;cause think &lt;a href="https://teamtopologies.com/videos-slides/what-is-platform-as-a-product-clues-from-team-topologies">platform as a product&lt;/a>), you&amp;rsquo;ll probably need to &amp;ldquo;sell&amp;rdquo; it, and help users identify if the product fits their needs. You might even help them use it. So, you&amp;rsquo;ll not only be building, but you&amp;rsquo;ll also be a salesman and consultant. At various levels and degrees.&lt;/p></description><content:encoded><![CDATA[<p><em>Updated introduction March 13.</em></p>
<p>Building a platform is <em>the</em> way to reduce cognitive load, in various areas.  I follow <a href="https://www.thoughtworks.com/what-we-do/enterprise-modernization-platforms-cloud/digital-platform-strategy">the model of ThoughtWorks</a>, where there are 5 types of platforms. In each, the ideal would be an easy-to-use platform that covers many use cases. That&rsquo;s difficult to do. As with any product (&lsquo;cause think <a href="https://teamtopologies.com/videos-slides/what-is-platform-as-a-product-clues-from-team-topologies">platform as a product</a>), you&rsquo;ll probably need to &ldquo;sell&rdquo; it, and help users identify if the product fits their needs. You might even help them use it. So, you&rsquo;ll not only be building, but you&rsquo;ll also be a salesman and consultant. At various levels and degrees.</p>
<p>This increases the cognitive load for the platform team. In addition, it might even be that they must help outside their own product.</p>
<p>This leads me to enabling teams,  and platform teams, and the distinction between them. As mentioned, the platform teams often must consult on more than what their platform is dedicated to doing. That might not be the best for that team, but it might be what the organization needs. How can we address that need directly?</p>
<h2 id="definitions-of-enabling-and-platform-teams">Definitions of enabling and platform teams</h2>
<p>First, look at the enabling team:</p>
<blockquote>
<p>The primary purpose of an enabling team is to <strong>help stream-aligned teams deliver working software in a sustainable, responsible way.</strong> Enabling teams do not exist to fix problems that arise from poor practices, poor prioritization choices, or poor code quality within stream-aligned teams. <strong>Stream-aligned teams should expect to work with enabling teams only for short periods of time (weeks or months)</strong> in order to increase their capabilities around a new technology, concept, or approach. <strong>After the new skills and understanding have been embedded in the stream-aligned team, the enabling team will stop daily interaction with the stream-aligned team, switching their focus to a different team.</strong><br>
<em>- Skelton, Matthew; Pais, Manuel. Team Topologies (p. 113). IT Revolution Press. Kindle Edition.</em></p></blockquote>
<p>What&rsquo;s the role of the platform team?</p>
<blockquote>
<p>The platform team provides internal services to reduce the cognitive load that would be required from stream-aligned teams to develop these underlying services.<br>
[..]</p>
<p>In practice, platform teams are expected to focus on providing a smaller number of services of acceptable quality rather than a large number of services with many resilience and quality problems.</p>
<p><em>- Skelton, Matthew; Pais, Manuel. Team Topologies (pp. 115-116). IT Revolution Press. Kindle Edition</em></p></blockquote>
<p>So, the enabling team offers <strong>competence and guidance</strong>. The platform teams offer <strong>services</strong>.</p>
<p>The authors refer to the Jutta Eckstein article from 2014, <a href="https://link.springer.com/chapter/10.1007/978-3-319-14358-3_3">&ldquo;Architecture in Large Scale Agile Development&rdquo;</a>. It offers us this figure showing various ways of handling architecture needs:</p>
<p><img src="/2023/eckstein2014.jpg" alt="Figure 2 from Eckstein 2014"></p>
<p>The platform team works in an organization where the teams want to make many changes, and the degree of uncertainty is high. They are technical service teams, offering a platform of internal services that enable many changes.</p>
<p>The enabling teams work in areas where there are fewer changes and less uncertainty. There is time to consult on ways forward.</p>
<p>Nevertheless, many teams in the first example, would need help with:</p>
<ol>
<li>Deciding if the platform is for them</li>
<li>If not, what else should they use</li>
<li>Help on how to use the platform</li>
</ol>
<p>Does this mean there should be a dedicated enabling team consulting on this behavior?</p>
<h2 id="a-consulting-platform-team">A consulting platform team</h2>
<p>I do not believe that this means platform teams cannot consult. They need to talk to their users to define needs and improve their platform. They must collaborate with their users.</p>
<blockquote>
<p>What kind of behaviors and outcomes do we expect to see in an effective platform team? ​</p>
<ul>
<li>A platform team uses <strong>strong collaboration with stream-aligned teams</strong> to understand their needs.</li>
<li>A platform team relies on <strong>fast prototyping techniques and involves stream-aligned team members for fast feedback</strong> on what works and what does not. ​</li>
<li>A platform team has a strong focus on usability and reliability for their services (treating the platform as a product), and r<strong>egularly assesses if the services are still fit for purpose and usable.</strong></li>
<li>​A platform team leads by example: using the services they provide internally (when applicable), partnering with stream-aligned teams and enabling teams, and consuming lower level platforms (owned by other platform teams) whenever possible. ​</li>
<li>A platform team understands that adoption of internal new services, like new technologies, is not immediate, but instead evolves along an adoption curve.</li>
</ul>
<p><em>- Skelton, Matthew; Pais, Manuel. Team Topologies (pp. 117-118). IT Revolution Press. Kindle Edition.</em></p></blockquote>
<p>So, they will interact with and help the team. What they won&rsquo;t do, is help a team over time.<br>
They might point the stream-aligned team in another direction, after realizing their platform isn&rsquo;t fit for this use case. Who might the stream-aligned team get help from then?</p>
<p>Well, someone who knows what they need help with. In the case of &ldquo;architecture&rdquo;, the people on the platform team consist of those with the most competence. As well as cloud services. So, they might point away from their team, but nevertheless, the &ldquo;need&rdquo; will come back to them.</p>
<p>To handle this, here are a few practices that might work, based on the number of people you have in your platform team, and the need for consulting around your organization:</p>
<ol>
<li>Create a dedicated enabling team for consulting on the platform, where the people might be in multiple teams (i.e. platform team and one enabling)</li>
<li>Dedicate a few people on the platform team to consult, and rotate who does it</li>
<li>Establish routines for handling this in your community of practice, i.e. asking for consulting over time from specific people through your Community of Practice</li>
</ol>
<p>This means that members of the platform team will do broader consulting, and that&rsquo;s okay. But the platform team must focus on internal services. So, if the consulting activities take up too much time, you&rsquo;ll see fewer results in the platform team. That should start a conversation on where we put our resources.</p>
]]></content:encoded></item><item><title>Building an organization for fast flow – delivering often and with high quality</title><link>https://www.svorstol.com/blog/2022/building-an-organization-for-fast-flow-delivering-often-and-with-high-quality/</link><pubDate>Wed, 26 Oct 2022 16:51:52 +0000</pubDate><guid>https://www.svorstol.com/blog/2022/building-an-organization-for-fast-flow-delivering-often-and-with-high-quality/</guid><description>&lt;p>&lt;em>Fast flow&lt;/em> is delivering often, with quality and hitting customer needs. How do we know that we are? Accelerate found that the so called DORA-metrics can predict 2x better results in the following areas:&lt;/p>
&lt;ol>
&lt;li>Profitability&lt;/li>
&lt;li>Productivity&lt;/li>
&lt;li>Market share&lt;/li>
&lt;li>Number of customers&lt;/li>
&lt;/ol>
&lt;p>The &lt;a href="https://www.leanix.net/en/wiki/vsm/dora-metrics#what-are-DORA-metrics">DORA-metrics&lt;/a> are&lt;/p>
&lt;ol>
&lt;li>Lead time&lt;/li>
&lt;li>Deployment frequency&lt;/li>
&lt;li>Mean time to restore&lt;/li>
&lt;li>Change/fail percentage&lt;/li>
&lt;/ol>
&lt;p>So, it seems that we should measure and work to improve our ability to deliver often and with quality, because those measures predict better business outcomes.&lt;/p></description><content:encoded><![CDATA[<p><em>Fast flow</em> is delivering often, with quality and hitting customer needs. How do we know that we are? Accelerate found that the so called DORA-metrics can predict 2x better results in the following areas:</p>
<ol>
<li>Profitability</li>
<li>Productivity</li>
<li>Market share</li>
<li>Number of customers</li>
</ol>
<p>The <a href="https://www.leanix.net/en/wiki/vsm/dora-metrics#what-are-DORA-metrics">DORA-metrics</a> are</p>
<ol>
<li>Lead time</li>
<li>Deployment frequency</li>
<li>Mean time to restore</li>
<li>Change/fail percentage</li>
</ol>
<p>So, it seems that we should measure and work to improve our  ability to deliver often and with quality, because those measures predict better business outcomes.</p>
<p>How might we help our teams to focus on those metrics?</p>
<ol>
<li>Reduce cognitive load <sup id="fnref:1"><a href="#fn:1" class="footnote-ref" role="doc-noteref">1</a></sup></li>
<li>Reduce handovers <sup id="fnref:2"><a href="#fn:2" class="footnote-ref" role="doc-noteref">2</a></sup></li>
</ol>
<p>And what would that mean in practice?</p>
<ol>
<li>Organize based on domains, so that a team can <a href="https://www.svorstol.com/blog/2021/02-27-solving-complex-problems/">solve problems end-to-end within their domain</a></li>
<li>Communicate direction and context often, e.g. with tools such as <a href="https://www.svorstol.com/blog/2022/okrs-when-scaling/">OKRs</a></li>
<li>Help teams coordinate with <a href="https://www.svorstol.com/blog/2022/rethinking-agile/">flight-levels</a>, <a href="https://teamtopologies.com/key-concepts">labeling teams</a> and <a href="https://github.com/TeamTopologies/Team-API-template">building APIs for the teams</a></li>
<li>Nurture a culture where improvement is celebrated, i.e. implement changes that help us deliver faster and with less faults<sup id="fnref:3"><a href="#fn:3" class="footnote-ref" role="doc-noteref">3</a></sup></li>
</ol>
<div class="footnotes" role="doc-endnotes">
<hr>
<ol>
<li id="fn:1">
<p>&ldquo;In cognitive psychology, cognitive load refers to the amount of working memory resources used.&rdquo; from <a href="https://en.wikipedia.org/wiki/Cognitive_load">Wikipedia</a>&#160;<a href="#fnref:1" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:2">
<p>See number 5 <a href="https://vitalitychicago.com/blog/my-favorite-agile-illustrations-from-henrik-kniberg-of-spotify-fame/">here</a>&#160;<a href="#fnref:2" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:3">
<p>Building culture is hard. Books such as <a href="https://www.amazon.com/Culture-Code-Secrets-Highly-Successful-ebook/dp/B019CGXU68/ref=tmm_kin_swatch_0?_encoding=UTF8&amp;qid=&amp;sr=">The Culture Code</a> can be inspiring.&#160;<a href="#fnref:3" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
</ol>
</div>
]]></content:encoded></item><item><title>Solving complex problems as fast as possible</title><link>https://www.svorstol.com/blog/2021/02-27-solving-complex-problems/</link><pubDate>Sat, 27 Feb 2021 21:43:16 +0100</pubDate><guid>https://www.svorstol.com/blog/2021/02-27-solving-complex-problems/</guid><description>&lt;p>As agile methods for software development has been quite widely adopted, the fact that hitting the specification on software is hard, also has been generally accepted. It has been hard, but it is now quite widely accepted that smaller iterations and getting user feedback fast, is crucial to building software that covers actual needs. This means better software, and better products. This trend means that we are starting to recognize that both product and software development are in of itself are complex problems &lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>, where the solution will be emerging over time. It cannot be defined up front. It will also be improved over time, through discovery. This means that it actually not a about the product, nor the software. It is not about business, or earning money. It is about solving complex problems, and doing it faster than anyone else. How?&lt;/p></description><content:encoded><![CDATA[<p>As agile methods for software development has been quite widely adopted, the fact that hitting the specification on software is hard, also has been generally accepted. It has been hard, but it is now quite widely accepted that smaller iterations and getting user feedback fast, is crucial to building software that covers actual needs. This means better software, and better products. This trend means that we are starting to recognize that both product and software development are in of itself are complex problems <sup id="fnref:1"><a href="#fn:1" class="footnote-ref" role="doc-noteref">1</a></sup>, where the solution will be emerging over time. It cannot be defined up front. It will also be improved over time, through discovery. This means that it actually not a about the product, nor the software. It is not about business, or earning money. It is about solving complex problems, and doing it faster than anyone else. How?</p>
<h3 id="what-enables-us-to-solve-complex-problems">What enables us to solve complex problems?</h3>
<p>To build &ldquo;business agility&rdquo;, I argue that one must build an organizations capability to solve problems, more importantly complex ones. Most problems will be:</p>
<blockquote>
<p>Most situations and decisions in organizations are complex because some major change — a bad quarter, a shift in management, a merger or acquisition—introduces unpredictability and flux. In this domain, we can understand why things happen only in retrospect. (Snowden and Boone, <a href="https://hbr.org/2007/11/a-leaders-framework-for-decision-making">here</a>)</p></blockquote>
<p>Snowden and Boone writes about this type of problems to address how a leader might approach them. As autonomy increases, more decisions are done everywhere in the organization. I.e. more problems are solved further &ldquo;down&rdquo; in the hierarchy. How does not one approach such problems, and make the solution as good as it can? An example approach can be found <a href="https://txm.com/making-sense-problems-cynefin-framework/">here</a>. It reads:</p>
<ol>
<li>Explore to learn about the problem, as they require more creativity and innovative thinking skills</li>
<li>Develop a theory and experiment to gather more knowledge</li>
<li>Experimentation to discover patterns and gain more knowledge</li>
<li>Repeat as necessary, with the goal of moving your problem into another category</li>
<li>Execute and evaluate, following the Plan, Do, Check, Act cycle</li>
</ol>
<p>The premise here is that you ar e able to explore the problem thinking cratlively about it. You must develop theories and experiment. How might an organizatino best enable all teams to do those things?</p>
<h3 id="real-cross-functional-teams">Real Cross-Functional Teams</h3>
<p>What is capabilities does a team need to solve a complex problem?</p>
<ol>
<li>First, be able to see all parts of the problem they are trying to solve</li>
<li>Second, see many possible experiments that might shed light on the prolem and the solution they might find</li>
<li>Third, be able to act upon experiemnt, and roll out new changes</li>
</ol>
<p>Most teams, either in software development or otherwise, address one capabilitiy.
A software delivery team <sup id="fnref:2"><a href="#fn:2" class="footnote-ref" role="doc-noteref">2</a></sup> rolls out changes, while a business/strategy team is trying to see the whole of a high level problem.</p>
<p>To adress all three,  the cross-functional cannot be cross-functional in the sense that it knows about devops, frontend/backend, infrastructure or even designing a UX. They must be capable of things like</p>
<ol>
<li>Developing the product, including building the tech and UX, and data pipelines to improve it</li>
<li>Developing the product strategy, including selecting the next feature to build, users to build for, how to spend time and not spent time</li>
<li>And building the market strategy</li>
<li>.. And propably many other things that I with my background cannot even think of. And that is sort of my point.</li>
</ol>
<h3 id="bring-in-people-iterate-over-the-whole-problem">Bring in people, iterate over the whole problem</h3>
<p>The recipe for building business agility seems to be the same as for building software agility. One could even argue that they are the exact same thing. And, it seems clear that the path to making value faster, is through solving the complex problems faster. This is, in turn, making sure that one has knowledge in the team that can adress the whole problem.</p>
<p>We need to stop placing &ldquo;a representative for the business&rdquo; as a Product Owner in the development team. This goes for design, UX and marketing as well, and all the other areas we miss. Creating flow is making sure our problems are solved fast, and the problems are about more than software. Building organizations without silos is hard. <sup id="fnref:3"><a href="#fn:3" class="footnote-ref" role="doc-noteref">3</a></sup> Can we come together, and try harder?</p>
<div class="footnotes" role="doc-endnotes">
<hr>
<ol>
<li id="fn:1">
<p>As defined in the <a href="https://en.wikipedia.org/wiki/Cynefin_framework">Cynefin Framework</a>&#160;<a href="#fnref:1" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:2">
<p>A nickname for an organization based on <a href="https://svpg.com/product-vs-feature-teams/">feature teams</a>&#160;<a href="#fnref:2" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:3">
<p>Reserach tells us that it is really hard to build cross-functionl teams. Or it tells us that doing it in just a part of the business is hard. <a href="https://hbr.org/2015/06/75-of-cross-functional-teams-are-dysfunctional">https://hbr.org/2015/06/75-of-cross-functional-teams-are-dysfunctional</a>&#160;<a href="#fnref:3" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
</ol>
</div>
]]></content:encoded></item><item><title>Using Team Topologies to reorganize a consultant company</title><link>https://www.svorstol.com/blog/2021/02-14-team-top-at-capra/</link><pubDate>Sun, 14 Feb 2021 18:03:29 +0100</pubDate><guid>https://www.svorstol.com/blog/2021/02-14-team-top-at-capra/</guid><description>&lt;p>In the last year or so I have been involved in reorganizing the company where I work, Capra Consutling, based on the same prinicples as one would want to organize software development. In short, we had an organizations based on roles and hierarchies which made sense when we were no more than 50 employees. When we arrived at 100 employees, it was natural to do some changes, but we did not want to add an extra layer of hierarchy. Therefore, our goal instead was to build a team based organization. We want to create highly autonomous teams, while still maintaining alignment across teams.&lt;/p></description><content:encoded><![CDATA[<p>In the last year or so I have been involved in reorganizing the company where I work, Capra Consutling, based on the same prinicples as one would want to organize software development. In short, we had an organizations based on roles and hierarchies which made sense when we were no more than 50 employees. When we arrived at 100 employees, it was natural to do some changes, but we did not want to add an extra layer of hierarchy. Therefore, our goal instead was to build a team based organization. We want to create highly autonomous teams, while still maintaining alignment across teams.</p>
<p>To have a common vocabulary, we based our work on the book <a href="https://www.amazon.com/Team-Topologies-Organizing-Business-Technology/dp/1942788819">Team Topologies</a>. One of the writers, Manuel Pais, joined us for a session earlier this February, to discuss his book, and using it for organizing other areas than software development. We also specifically discussed our current organizatinoal design. The session was recorded, you can see it <a href="https://youtu.be/lksI_2QL5Ww">here</a>.</p>
<p>I&rsquo;ve previously written an article on how we, step by step, went from roles to teams. It is posted over at our <a href="https://www.capraconsulting.no/blogg/slik-reorganiserer-vi-capra">company blog</a>. The article is in Norwegian.</p>
]]></content:encoded></item></channel></rss>